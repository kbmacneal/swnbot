// Generated by https://quicktype.io

namespace swnbot.Classes
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Equipment
    {
        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("Cost")]
        public string Cost { get; set; }

        [JsonProperty("Encumbrance")]
        public string Encumbrance { get; set; }

        [JsonProperty("TechLevel")]
        public string TechLevel { get; set; }

        [JsonProperty("Id")]
        public long Id { get; set; }
    }

    public partial class Equipment
    {
        public static Equipment[] FromJson(string json) => JsonConvert.DeserializeObject<Equipment[]>(json, EquipmentConverter.Settings);
    }

    public static class SerializeEquipment
    {
        public static string ToJson(this Equipment[] self) => JsonConvert.SerializeObject(self, EquipmentConverter.Settings);
    }

    internal static class EquipmentConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
